hydra:
  output_subdir: null
  run:
    dir: .

environment:
  SEED: 42
  device: 'cuda'
  GPU_id: '2'

trainer:
  module: src.train
  type: Trainer
  config:
    train_frac: 0.5
    n_iter: 512000
    logging_interval: 500
    lambda1: 0
    lambda2: 0
    lambda3: 0
    lambda4: 0
    shooting_lambda_step: 0

    project_name: 'NODE model'
    experiment_name: 'sin 0.5 402 points normalized t, non-local encoder, 10 ld more layers unet'
    notes: ''
    tags: ['report', 'motivational', 'non-local encoder']
#    tags: ['debug']
    mode: 'online'

    log_dir: './logs'

    scaling: 'total'
    normalize_t: True
    normalize_rhs_loss: True

trajectory:
  module: src.data.data

  type: SinTrajectory
  config:
    noise_std: 0
    t0: 0
#    T: 50.2654
    T: 25.1327
#    n_points: 802
    n_points: 402
    signal_amp: 1.

#  type: SpiralTrajectory
#  config:
#    noise_std: 0.
#    visible_dims: [0, 1]
#    t0: 0
#    T: 150.
#    n_points: 802
#    signal_amp: 2.

#  type: LorenzTrajectory
#  config:
#    noise_std: 0.
#    visible_dims: (0, 1, 2)
#    t0: 0
#    T: 50.
#    n_points: 402
#    signal_amp: 10.
#    sigma: 10.
#    rho: 28.
#    beta: 2.6666

#  type: CascadedTanksTrajectory
#  config:
#    noise_std: 0.
#    data_path: ./data/cascaded_tanks.pkl

#  type: PendulumTrajectory
#  config:
#    noise_std: 0.
#    visible_dims: (0, 1)
#    T: 100.
#    n_points: 402
#    m: 5.
#    l: 10.
#    lambd: 0.05

#  type: FluidFlowTrajectory
#  config:
#    noise_std: 0.
#    visible_dims: (0, 1, 2)
#    T: 50.
#    n_points: 402
#    mu: 0.1
#    omega: 1
#    A: -0.1
#    lam: 10

#  type: ShortKarmanVortexStreetTrajectory
#  config:
#    noise_std: 0.
#    n_points: 402
#    data_path: ./data/karman_snapshots.npz

#  type: LongKarmanVortexStreetTrajectory
#  config:
#    noise_std: 0.
#    n_points: 802
#    data_path: ./data/karman-vortex.gif

#  type: ToyTrajectory
#  config:
#    noise_std: 0.1
#    T: 25.1327
#    n_points: 803

optimizer:
  module: torch.optim
  type: Adam
  config:
    lr: 1e-4

model:
  config:
    n_shooting_vars: 1
    latent_dim: 10
  encoder:
    module: src.models.encoder_model

#    type: TrivialEncoder
#    config:
#      weight_decay: 0

#    type: DirectOptimizationEncoder
#    config:
#      init_distribution: 'normal separate'
#      weight_decay: 0

    type: NontrivialEncoder
    config:
      weight_decay: 0
      encoder_net:
        module: src.models.nets.encoder_nets

#        type: FCLatentSpaceEncoder
#        config:
#          n_layers: 5
#          hidden_dim: 5
#          activation: 'tanh'
#          normalized: False
#          dropouts: []

#        type: SimpleLatentSpaceEncoder
#        config: {}

#        type: ConvLatentSpaceEncoder
#        config:
#          n_layers: 5
#          hidden_channels: 10
#          activation: 'tanh'

        type: UNetLikeLatentSpaceEncoder
        config:
          init_channels: 2
          n_layers: 5
          activation: 'relu'

#        type: TransformerLatentSpaceEncoder
#        config:
#          n_layers: 5
#          nhead: 8
#          dim_feedforward: 256
#          dropout: 0.
#          activation: 'relu'


  decoder:
    module: src.models.decoder_model

#    type: TrivialDecoder
#    config:
#      weight_decay: 0

    type: NontrivialDecoder
    config:
      weight_decay: 0
      dropout: 0
    decoder_net:
      module: src.models.nets.decoder_nets

#      type: SimpleLatentSpaceDecoder
#      config: {}

      type: FCLatentSpaceDecoder
      config:
        n_layers: 5
        hidden_dim: 10
        activation: 'tanh'
        normalized: False
        dropouts: []
#
#      type: UNetLikeConvLatentSpaceDecoder
#      config:
#        init_channels: 10
#        n_layers: 5
#        act: 'tanh'
#        always_decrease_n_ch: False
#
#      type: ShrinkingResLatentSpaceDecoder
#      config:
#        n_layers: 5

#      type: MixNetLatentSpaceDecoder
#      config:
#        n_layers: 5
#        hidden_dim: 50
#        activation: 'tanh'
#        normalized: False
#        dropouts: []
#        conv_index: 0
#
#      type: Seq2SeqTransformerLatentSpaceDecoder
#      config:
#        n_layers: 5
#        nhead: 8
#        dim_feedforward: 256
#        dropout: 0.
#        activation: 'relu'

  shooting:
    module: src.models.shooting_model

    type: DeterministicShooting
    config: {}

#    type: VariationalShooting
#    config:
#      n_samples: 64

    linear:
      module: src.models.nets.rhs_nets

#      type: UnstableLinear
#      config: {}

#      type: StableLinear
#      config:
#        use_random_projection_init: True
#        norm: 100.
#        skewsymmetricity_alpha: 0
#
#      type: StableDHLinear
#      config:
#        use_random_projection_init: True
#        eps: 1e-7
#        norm: 10.
#        skewsymmetricity_alpha: 1

    rhs_net:
      module: src.models.nets.rhs_nets

#      type: SimpleRHS
#      odeint:
#        module: src.utils.linear_ode_int
#        type: matrix_exp_odeint
#      config:
#        dynamics_weight_decay: 0

      type: FCRHS
      odeint:
        module: torchdiffeq
        type: odeint
      config:
        n_layers: 5
        hidden_dim: 10
        activation: 'tanh'
        normalized: False

        dynamics_weight_decay: 0.

#      type: ControlledLinearRHS
#      odeint:
#        module: torchdiffeq
#        type: odeint
#      config:
#        n_layers: 5
#        hidden_dim: 50
#        controller_activation: 'tanh'
#        normalized_controller: False
#
#        dynamics_weight_decay: 0.
#        controller_weight_decay: 0.
